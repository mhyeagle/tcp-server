!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AcceptConn	echo_server.cc	/^void AcceptConn(int fd, int events, void *arg) {$/;"	f
EventAdd	echo_server.cc	/^void EventAdd(int epollFd, int events, myevent_s *ev) {$/;"	f
EventDel	echo_server.cc	/^void EventDel(int epollFd, myevent_s *ev) {$/;"	f
EventSet	echo_server.cc	/^void EventSet(myevent_s *ev, int fd, void(*call_back)(int, int, void*), void *arg) {$/;"	f
InitListenSocket	echo_server.cc	/^void InitListenSocket(int epollFd, short port) {$/;"	f
MAX_EVENTS	echo_server.cc	18;"	d	file:
RecvData	echo_server.cc	/^void RecvData(int fd, int events, void *arg) {$/;"	f
SendData	echo_server.cc	/^void SendData(int fd, int events, void *arg) {$/;"	f
arg	echo_server.cc	/^	void *arg;$/;"	m	struct:myevent_s	file:
buff	echo_server.cc	/^	char buff[128]; \/\/recv data buffer$/;"	m	struct:myevent_s	file:
call_back	echo_server.cc	/^	void (*call_back)(int fd, int events, void *arg);$/;"	m	struct:myevent_s	file:
events	echo_server.cc	/^	int events;$/;"	m	struct:myevent_s	file:
fd	echo_server.cc	/^	int fd;$/;"	m	struct:myevent_s	file:
g_Events	echo_server.cc	/^myevent_s g_Events[MAX_EVENTS+1];$/;"	v
g_epollFd	echo_server.cc	/^int g_epollFd;$/;"	v
last_active	echo_server.cc	/^	long last_active; \/\/last active time$/;"	m	struct:myevent_s	file:
len	echo_server.cc	/^	int len, s_offset;$/;"	m	struct:myevent_s	file:
main	echo_server.cc	/^int main(int argc, char **argv) {$/;"	f
myevent_s	echo_server.cc	/^struct myevent_s {$/;"	s	file:
s_offset	echo_server.cc	/^	int len, s_offset;$/;"	m	struct:myevent_s	file:
status	echo_server.cc	/^	int status; \/\/1:in epoll wait list, 0 not in$/;"	m	struct:myevent_s	file:
